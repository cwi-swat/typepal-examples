test Int1 [[ 1 ]]

test Bool1 [[ true ]]
test Bool2 [[ false ]]

test Var1 [[ x ]] expect {"Undefined variable `x`"}

test Add1 [[ 1 + 2 ]]
test Add2 [[ 1 + false ]] expect {"rhs of +"}
test Add3 [[ false + 1 ]] expect {"lhs of +"}

test And1 [[ true && false ]]
test And2 [[ true && 1 ]] expect {"rhs of &&"}
test And3 [[ 1 && false ]] expect {"lhs of &&"}

test Bracket1 [[ (1) ]]
test Bracket2 [[ (true) ]]

test Id1 [[ fun x : int { x } ]]
test Id2 [[ fun x : int { x }(1) ]]
test Id3 [[ fun x : bool { x }(true) ]]

test Inc1 [[ fun x : int { x + 1 } ]]
test Inc2 [[ fun x : int { x + 1 }(2) ]]
test Inc3 [[ fun x : int { x + 1 }(true) ]] expect {"actual parameter"}

test If1 [[ if true then 1 else 2 fi ]]
test If2 [[ if true then true else false fi ]]
test If3 [[ if 1 then 1 else 2 fi ]] expect {"Condition"}
test If4 [[ if true then 1 else true fi ]] expect {"thenPart"}

test In1 [[ let x : int = 1 in x end ]]
test In2 [[ let x : int = 1 in x + 1 end ]]
test In3 [[ let x : int = 1 in x && true end ]] expect {"lhs of &&"}
test In4 [[ let x : bool = true in x + 1 end ]] expect {"lhs of +"}
test In5 [[ let id : int -> int = fun x : int { x } in id(1) end ]]
test In6 [[ let id : bool -> bool = fun x : bool { x } in id(true) end ]]

test In7 [[ let inc : int -> int = fun x : int { x + 1 } in inc(3) end ]]
test In8 [[ let inc : int -> int = fun x : int { x + 1 } in inc(true) end ]] expect {"actual parameter"}
test In9 [[ let inc1 : int -> int = fun x : int { x + 1 } in 
            let inc2 : int -> int = fun x : int { inc1(x) } in inc2(3) end end ]]
test In10 [[ let inc1 : int -> int = fun x : int { x + 1 } in 
             let inc2 : int -> int = fun x2 : int { inc1(x2) } in inc2(false) end end]] expect {"actual parameter"}