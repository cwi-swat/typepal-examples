test Class1 [[
    module M
    class C {
        int i;
        int f (int b) = i + b;
    }
]]

test Class2 [[
    module M
    class C {
        str i;
        str f (str b) = i + b;
    }
]]

test UndefinedField1 [[
    module M
    class C {
        int i;
        int f (int b) = j + b;
    }
]] expect { "Undefined method, field or parameter `j`" }

test UndefinedParameter [[
    module M
    class C {
        int i;
        int f (int b) = i + c;
    }
]] expect { "Undefined method, field or parameter `c`" }

test WrongPlus1 [[
    module M
    class C {
        int i;
        str s;
        int f () = i + s;
    }
]] expect { "+ is not defined on `int` and `str`" }

test UndefinedClass [[
    module M
    class C {
        D d;
    }
]] expect { "Undefined class `D`" }

test Module1 [[
    module M
    
    class A {
        int f;
    }
    
    class B {
        A a;
        int g(int p) = a.f + p;
    }
]]

test Module2 [[
    module M
    
    class A {
        int f(int p) = p + 2;
    }
    
    class B {
        A a;
        int f(int p) = a.f(p) + p;
    }
]]

test UndefinedField2 [[
    module M
    
    class A {
        int f;
    }
    
    class B {
        A a;
        int g(int p) = a.g + p;
    }
]] expect { "Unresolved type for `g`" }

test WrongPlus2 [[
    module M
    
    class A {
        str f;
    }
    
    class B {
        A a;
        int g(int p) = a.f + p;
    }
]] expect { "+ is not defined on `str` and `int`" }

test WrongParameter1 [[
    module M
    
    class A {
        int f(int p) = p + 2;
    }
    
    class B {
        A a;
        int f(str p) = a.f(p) + p;
    }
]] expect { "No function can be found that accepts these parameters: `str`" }

test UndefinedMethod1 [[
    module M
    
    class A {
        int f(int p) = p + 2;
    }
    
    class B {
        A a;
        int f(str p) = a.g(p) + p;
    }
]] expect { "Unresolved type for `g`" }
